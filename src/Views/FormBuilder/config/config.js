const config = {
  projectName: process.env.PROJECT_NAME || 'Formbuilder',
  server: {
    remote: process.env.SERVER_URL,
    bucket: 'formbuilder',
  },
  appURL: process.env.APP_URL || window.location.origin + window.location.pathname,
  fieldList: [
    {
      id: 'text',
      icon: 'text-color',
      label: 'Short text',
      jsonSchema: {
        type: 'string',
        title: 'Edit me',
        iconField: '',
        description: '',
        specialKey: '',
        hasEffectOn: '',
        hasEffectedFrom: '',
        duplicateValidation: '',
        regExp: '',
        errorMsg: '',
        default: '',
        isSearchable: true,
        searchableKey: '',
        displayPath: '',
        DtoName: ''

      },
      uiSchema: {
        // 'ui:widget': 'textField',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            title: { type: 'string', title: 'Field Title' },
            description: { type: 'string', title: 'Tab Name' },
            iconField: { type: 'iconField', title: 'Icon' },
            required: { type: 'boolean' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            searchableKey: { type: 'string', title: 'Searchable Key ' },
            displayPath: { type: 'string', title: 'display Path' },
            specialKey: { type: 'string', title: 'SpecialKey' },
            hasEffectOn: { type: 'string', title: 'Effect on Field Name' },
            hasEffectedFrom: { type: 'string', title: 'Effect From Field Name' },
            duplicateValidation: { type: 'string', title: 'duplicate Validation (true, flase)' },
            regExp: { type: 'string', title: 'Regular Expression' },
            errorMsg: { type: 'string', title: 'Error Message' },
            DtoName: { type: 'string', title: 'Dto Name' },
          },
        },
      },
      formData: {},
    },
    {
      id: 'multilinetext',
      icon: 'align-left',
      label: 'Long text',
      jsonSchema: {
        type: 'string',
        title: 'Edit me',
        description: '',
        iconField: '',
        default: '',
        isSearchable: true,
        searchableKey: '',
        displayPath: '',
        DtoName:''

      },
      uiSchema: {
        'ui:widget': 'textarea',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            title: { type: 'string', title: 'Label' },
            iconField: { type: 'iconField', title: 'Icon' },
            description: { type: 'string', title: 'Tab Name' },
            required: { type: 'boolean' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            searchableKey: { type: 'string', title: 'Searchable Key ' },
            displayPath: { type: 'string', title: 'display Path' },
            regExp: { type: 'string', title: 'Regular Expression' },
            errorMsg: { type: 'string', title: 'Error Message' },
            DtoName: { type: 'string', title: 'Dto Name' },
          },
        },
      },
      formData: {},
    },
    {
      id: 'checkbox',
      icon: 'check',
      label: 'Checkbox',
      jsonSchema: {
        type: 'boolean',
        title: 'Edit me',
        description: '',
        iconField: '',
        default: false,
        isSearchable: true,
        searchableKey: '',
        displayPath: '',
        DtoName: ''
      },
      uiSchema: {
        'ui:widget': 'checkbox',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            iconField: { type: 'iconField', title: 'Icon' },
            title: { type: 'string', title: 'Label' },
            description: { type: 'string', title: 'Tab Name' },
            searchableKey: { type: 'string', title: 'Searchable Key ' },
            required: { type: 'boolean' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            displayPath: { type: 'string', title: 'display Path' },
            DtoName: { type: 'string', title: 'Dto Name' },
          },
        },
      },
      formData: {},
    },
    {
      id: 'multiple-checkbox',
      icon: 'check',
      label: 'Multiple choices',
      jsonSchema: {
        type: 'array',
        title: 'A multiple choices list',
        description: '',
        items: {
          type: 'string',
          enum: ['choice 1', 'choice 2', 'choice 3'],
        },
        uniqueItems: true,
        isSearchable: true,
        searchableKey: '',
        displayPath: '',
        DtoName: '',
      },
      uiSchema: {
        'ui:widget': 'checkboxes',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            title: { type: 'string', title: 'Label' },
            description: { type: 'string', title: 'Tab Name' },
            required: { type: 'boolean' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            searchableKey: { type: 'string', title: 'Searchable Key ' },
            displayPath: { type: 'string', title: 'display Path' },
            DtoName: { type: 'string', title: 'Dto Name' },
            items: {
              type: 'object',
              title: 'Choices',
              properties: {
                enum: {
                  title: null,
                  type: 'array',
                  items: {
                    type: 'string',
                  },
                  default: ['choice 1', 'choice 2', 'choice 3'],
                },
              },
            },
          },
        },
      },
      formData: {},
    },
    {
      id: 'radiobuttonlist',
      icon: 'list',
      label: 'Choice list',
      jsonSchema: {
        type: 'string',
        title: 'Edit me',
        description: '',
        enum: ['option 1', 'option 2', 'option 3'],
        isSearchable: true,
        displayPath: '',
        DtoName: '',
      },
      uiSchema: {
        'ui:widget': 'radio',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            title: { type: 'string', title: 'Label' },
            description: { type: 'string', title: 'Tab Name' },
            required: { type: 'boolean' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            displayPath: { type: 'string', title: 'display Path' },
            DtoName: { type: 'string', title: 'Dto Name' },
            enum: {
              type: 'array',
              title: 'Options',
              items: {
                type: 'string',
              },
            },
          },
        },
      },
      formData: {},
    },
    {
      id: 'select',
      icon: 'chevron-down',
      label: 'Select List',
      jsonSchema: {
        type: 'string',
        format: 'string',
        title: 'Edit me',
        description: '',
        multi: 'false',
        specialKey: '',
        hasEffectOn: '',
        hasEffectedFrom: '',
        api: '',
        lookup: '',
        default: '',
        iconField: '',
        enum: ['option 1', 'option 2', 'option 3'],
        isSearchable: true,
        searchableKey: '',
        displayPath: '',
        DtoName: '',
      },
      uiSchema: {
        'ui:widget': 'select',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            title: { type: 'string', title: 'Label' },
            description: { type: 'string', title: 'Tab Name' },
            multi: { type: 'string', title: 'Multi (true, false)' },
            specialKey: { type: 'string', title: 'Special Key' },
            hasEffectOn: { type: 'string', title: 'Effect on Field Name' },
            hasEffectedFrom: { type: 'string', title: 'Effect From Field Name' },
            api: { type: 'string', title: 'API path' },
            lookup: { type: 'lookup', title: 'Lookup' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            searchableKey: { type: 'string', title: 'Searchable Key ' },
            displayPath: { type: 'string', title: 'display Path' },
            iconField: { type: 'iconField', title: 'Icon' },
            default: { type: 'string', title: 'Default Value' },
            required: { type: 'boolean' },
            DtoName: { type: 'string', title: 'Dto Name' },
            enum: {
              type: 'array',
              title: 'Options',
              items: {
                type: 'string',
              },
            },
          },
        },
      },
      formData: {},
    },
    {
      id: 'date',
      icon: 'calendar',
      label: 'Date',
      jsonSchema: {
        type: 'string',
        format: 'date',
        title: 'Edit me',
        description: '',
        maxDate: '',
        minDate: '',
        hasEffectOn: '',
        iconField: '',
        hasEffectedFrom: '',
        regExp: '',
        errorMsg: '',
        isSearchable: true,
        searchableKey: '',
        displayPath: '',
        DtoName: '',
      },
      uiSchema: {
        'ui:widget': 'alt-date',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            title: { type: 'string', title: 'Label' },
            iconField: { type: 'iconField', title: 'Icon' },
            description: { type: 'string', title: 'Tab Name' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            maxDate: { type: 'string', title: 'Max Date' },
            minDate: { type: 'string', title: 'Min Date' },
            searchableKey: { type: 'string', title: 'Searchable Key ' },
            displayPath: { type: 'string', title: 'display Path' },
            hasEffectOn: { type: 'string', title: 'Effect on Field Name' },
            hasEffectedFrom: { type: 'string', title: 'Effect From Field Name' },
            required: { type: 'boolean' },
            regExp: { type: 'string', title: 'Regular Expression' },
            errorMsg: { type: 'string', title: 'Error Message' },
            DtoName: { type: 'string', title: 'Dto Name' },
          },
        },
      },
      formData: {},
    },
    /*
    {
      id: "country",
      icon: "chevron-down",
      label: "Country List",
      jsonSchema: {
        type: "string",
        format: "string",
        title: "Edit me",
        description: "",
        default:"",
        specialKey: "",
        hasEffectOn:"",
        enum: [],
      },
      uiSchema: {
        "ui:widget": "country",
        editSchema: {
          type: "object",
          fieldType:"extra",
          properties: {
            title: {type: "string", title: "Label"},
            description: {type: "string", title: "Tab Name"},
            specialKey: {type: "string", title: "Special Key"},
            hasEffectOn: {type: "string", title: "Effect on Field Name"},
            default: {type: "string", title: "Default"},
            required: {type: "boolean"},
            enum: {
              type: "array",
              title: "Options",
              items: {
                type: "string"
              }
            }
          }
        },
      },
      formData: {}
    }, */
    /* {
      id: "phone",
      icon: "text-color",
      label: "Phone Number",
      jsonSchema: {
        type: "string",
        title: "Edit me",
        description: "",
        defaultCountryCode:"",
        duplicateValidation:"",
        regExp:"",
        errorMsg:"",
        default: ""
      },
      uiSchema: {
        "ui:widget": "phone",
        editSchema: {
          type: "object",
          fieldType:"extra",
          properties: {
            title: {type: "string", title: "Field Title"},
            description: {type: "string", title: "Tab Name"},
            defaultCountryCode: {type: "string", title: "Country Code"},
            duplicateValidation:{type: "string", title: "duplicate Validation (true, flase)"},
            required: {type: "boolean"},
            regExp:{type: "string", title: "Regular Expression"},
            errorMsg:{type: "string", title: "Error Message"},
          }
        },
      },
      formData: {}
    }, */
    {
      id: 'searchField',
      icon: 'text-color',
      label: 'Search Field',
      jsonSchema: {
        type: 'string',
        title: 'Edit me',
        description: '',
        searchKey: '',
        iconField: '',
        dependOn: '',
        multi: 'false',
        regExp: '',
        errorMsg: '',
        default: '',
        isSearchable: true,
        searchableKey: '',
        displayPath: '',
        DtoName: '',
      },
      uiSchema: {
        'ui:widget': 'searchField',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            title: { type: 'string', title: 'Field Title' },
            iconField: { type: 'iconField', title: 'Icon' },
            description: { type: 'string', title: 'Tab Name' },
            searchKey: { type: 'string', title: 'Search by' },
            searchableKey: { type: 'string', title: 'Searchable Key ' },
            dependOn: { type: 'string', title: 'Search depend on field' },
            multi: { type: 'string', title: 'Multi (true, false)' },
            required: { type: 'boolean' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            displayPath: { type: 'string', title: 'display Path' },
            regExp: { type: 'string', title: 'Regular Expression' },
            errorMsg: { type: 'string', title: 'Error Message' },
            DtoName: { type: 'string', title: 'Dto Name' },
          },
        },
      },
      formData: {},
    },
    {
      id: 'rangeField',
      icon: 'text-color',
      label: 'Range Field',
      jsonSchema: {
        type: 'string',
        title: 'Edit me',
        description: '',
        minNumber: '',
        maxNumber: '',
        regExp: '',
        errorMsg: '',
        iconField: '',
        default: '',
        isSearchable: true,
        searchableKey: '',
        displayPath: '',
        DtoName: '',
      },
      uiSchema: {
        'ui:widget': 'rangeField',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            title: { type: 'string', title: 'Field Title' },
            description: { type: 'string', title: 'Tab Name' },
            minNumber: { type: 'string', title: 'Minimum Number' },
            maxNumber: { type: 'string', title: 'Maximum Number' },
            iconField: { type: 'iconField', title: 'Icon' },
            required: { type: 'boolean' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            searchableKey: { type: 'string', title: 'Searchable Key ' },
            displayPath: { type: 'string', title: 'display Path' },
            regExp: { type: 'string', title: 'Regular Expression' },
            errorMsg: { type: 'string', title: 'Error Message' },
            DtoName: { type: 'string', title: 'Dto Name' },
          },
        },
      },
      formData: {},
    },
    {
      id: 'PriceAndPercentage',
      icon: 'text-color',
      label: 'Price And Percentage',
      jsonSchema: {
        type: 'string',
        title: 'Edit me',
        description: '',
        controlType: '',
        isSearchable: true,
        searchableKey: '',
        DtoName: '',
      },
      uiSchema: {
        'ui:widget': 'PriceAndPercentage',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            title: { type: 'string', title: 'Field Title' },
            description: { type: 'string', title: 'Tab Name' },
            controlType: { type: 'string', title: 'Type of control' },
            required: { type: 'boolean' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            searchableKey: { type: 'string', title: 'Searchable Key ' },
            displayPath: { type: 'string', title: 'display Path' },
            DtoName: { type: 'string', title: 'Dto Name' },
          },
        },
      },
      formData: {},
    },
    {
      id: 'MapField',
      icon: 'text-color',
      label: 'Map Field',
      jsonSchema: {
        type: 'string',
        iconField: '',
        isSearchable: true,
        displayPath: '',
        title: 'Edit me',
        description: '',
        specialKey: '',
        default: '',
        searchableKey: '',
        DtoName: '',
      },
      uiSchema: {
        'ui:widget': 'MapField',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            title: { type: 'string', title: 'Field Title' },
            iconField: { type: 'iconField', title: 'Icon' },
            description: { type: 'string', title: 'Tab Name' },
            required: { type: 'boolean' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            specialKey: { type: 'string', title: 'SpecialKey' },
            searchableKey: { type: 'string', title: 'Searchable Key ' },
            displayPath: { type: 'string', title: 'display Path' },
            DtoName: { type: 'string', title: 'Dto Name' },
          },
        },
      },

      formData: {},
    },
    {
      id: 'UploadFiles',
      icon: 'chevron-down',
      label: 'Upload Files',
      jsonSchema: {
        type: 'string',
        format: 'string',
        title: 'Edit me',
        description: '',
        multi: 'false',
        specialKey: '',
        default: '',
        lookup: '',
        iconField: '',
        isSearchable: true,
        displayPath: '',
        enum: ['option 1', 'option 2', 'option 3'],
        DtoName: '',
      },
      uiSchema: {
        'ui:widget': 'UploadFiles',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            title: { type: 'string', title: 'Label' },
            description: { type: 'string', title: 'Tab Name' },
            multi: { type: 'string', title: 'Multi (true, false)' },
            specialKey: { type: 'string', title: 'Special Key' },
            lookup: { type: 'lookup', title: 'Lookup' },
            required: { type: 'boolean' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            displayPath: { type: 'string', title: 'display Path' },
            iconField: { type: 'iconField', title: 'Icon' },
            DtoName: { type: 'string', title: 'Dto Name' },
            enum: {
              type: 'array',
              title: 'Options',
              items: {
                type: 'string',
              },
            },
          },
        },
      },
      formData: {},
    },
    {
      id: 'UnitsModels',
      icon: 'chevron-down',
      label: 'Unit Models Field',
      jsonSchema: {
        type: 'string',
        format: 'string',
        title: 'Edit me',
        description: '',
        default: '',
        iconField: '',
        isSearchable: true,
        displayPath: '',
        enum: ['Area', 'Bedroom', 'Bathroom', 'Units No.'],
        DtoName: '',
      },
      uiSchema: {
        'ui:widget': 'UnitsModels',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            title: { type: 'string', title: 'Label' },
            description: { type: 'string', title: 'Tab Name' },
            iconField: { type: 'iconField', title: 'Icon' },
            required: { type: 'boolean' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            displayPath: { type: 'string', title: 'display Path' },
            DtoName: { type: 'string', title: 'Dto Name' },
            enum: {
              type: 'array',
              title: 'Options',
              items: {
                type: 'string',
              },
            },
          },
        },
      },
      formData: {},
    },
    {
      id: 'StepValidation',
      icon: 'chevron-down',
      label: 'Step Validation',
      jsonSchema: {
        type: 'string',
        format: 'string',
        title: 'Edit me',
        description: '',
        default: '',
        iconField: '',
        isSearchable: true,
        displayPath: '',
        DtoName: '',
        enum: ['Validation 1', 'Validation 2', 'Validation 3'],
      },
      uiSchema: {
        'ui:widget': 'StepValidation',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            title: { type: 'string', title: 'Label' },
            iconField: { type: 'iconField', title: 'Icon' },
            description: { type: 'string', title: 'Tab Name' },
            required: { type: 'boolean' },
            displayPath: { type: 'string', title: 'display Path' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            DtoName: { type: 'string', title: 'Dto Name' },
            enum: {
              type: 'array',
              title: 'Options',
              items: {
                type: 'string',
              },
            },
          },
        },
      },
      formData: {},
    },
    {
      id: 'Phone',
      icon: 'text-color',
      label: 'Phone Field',
      jsonSchema: {
        type: 'string',
        title: 'Edit me',
        description: '',
        lookupItem: '',
        defaultCountryCode: '',
        CommunicationType: 'Phone',
        duplicateValidation: '',
        iconField: '',
        regExp: '',
        errorMsg: '',
        isSearchable: true,
        searchableKey: '',
        displayPath: '',
        DtoName: '',
      },
      uiSchema: {
        'ui:widget': 'communication',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            title: { type: 'string', title: 'Field Title' },
            description: { type: 'string', title: 'Tab Name' },
            iconField: { type: 'iconField', title: 'Icon' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            searchableKey: { type: 'string', title: 'Searchable Key ' },
            lookupItem: {
              type: 'lookupItem',
              lookupTypeName: 'PhoneCommunication',
              lookupParentId: '',
              title: 'Phone Type',
            },
            displayPath: { type: 'string', title: 'display Path' },
            defaultCountryCode: { type: 'string', title: 'Country Code' },
            CommunicationType: { type: 'string', title: 'Communication Type' },
            duplicateValidation: { type: 'string', title: 'duplicate Validation (true, flase)' },
            required: { type: 'boolean' },
            regExp: { type: 'string', title: 'Regular Expression' },
            errorMsg: { type: 'string', title: 'Error Message' },
            DtoName: { type: 'string', title: 'Dto Name' },
          },
        },
      },
      formData: {},
    },
    {
      id: 'Email',
      icon: 'text-color',
      label: 'Email Field',
      jsonSchema: {
        type: 'string',
        title: 'Edit me',
        description: '',
        lookupItem: '',
        CommunicationType: 'Email',
        duplicateValidation: '',
        iconField: '',
        regExp: '',
        errorMsg: '',
        isSearchable: true,
        searchableKey: '',
        displayPath: '',
        DtoName: '',
      },
      uiSchema: {
        'ui:widget': 'communication',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            title: { type: 'string', title: 'Field Title' },
            iconField: { type: 'iconField', title: 'Icon' },
            description: { type: 'string', title: 'Tab Name' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            DtoName: { type: 'string', title: 'Dto Name' },
            lookupItem: {
              type: 'lookupItem',
              lookupTypeName: 'EmailCommunication',
              lookupParentId: '',
              title: 'Email Type',
            },
            searchableKey: { type: 'string', title: 'Searchable Key ' },
            CommunicationType: { type: 'string', title: 'Communication Type' },
            duplicateValidation: { type: 'string', title: 'duplicate Validation (true, flase)' },
            displayPath: { type: 'string', title: 'display Path' },
            required: { type: 'boolean' },
            regExp: { type: 'string', title: 'Regular Expression' },
            errorMsg: { type: 'string', title: 'Error Message' },
          },
        },
      },
      formData: {},
    },
    {
      id: 'SocialMedia',
      icon: 'text-color',
      label: 'SocialMedia Field',
      jsonSchema: {
        type: 'string',
        title: 'Edit me',
        description: '',
        lookupItem: '',
        CommunicationType: 'SocialMedia',
        duplicateValidation: '',
        regExp: '',
        iconField: '',
        errorMsg: '',
        isSearchable: true,
        searchableKey: '',
        displayPath: '',
        DtoName: '',
      },
      uiSchema: {
        'ui:widget': 'communication',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            title: { type: 'string', title: 'Field Title' },
            description: { type: 'string', title: 'Tab Name' },
            iconField: { type: 'iconField', title: 'Icon' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            searchableKey: { type: 'string', title: 'Searchable Key ' },
            displayPath: { type: 'string', title: 'display Path' },
            lookupItem: {
              type: 'lookupItem',
              lookupTypeName: 'SocialMediaCommunication',
              lookupParentId: '',
              title: 'Social Media Type',
            },
            CommunicationType: { type: 'string', title: 'Communication Type' },
            duplicateValidation: { type: 'string', title: 'duplicate Validation (true, flase)' },
            required: { type: 'boolean' },
            regExp: { type: 'string', title: 'Regular Expression' },
            errorMsg: { type: 'string', title: 'Error Message' },
            DtoName: { type: 'string', title: 'Dto Name' },
          },
        },
      },
      formData: {},
    },
    {
      id: 'Address',
      icon: 'text-color',
      label: 'Address Field',
      jsonSchema: {
        type: 'string',
        format: 'string',
        title: 'Edit me',
        description: '',
        multi: 'false',
        specialKey: '',
        hasEffectOn: '',
        hasEffectedFrom: '',
        lookup: '',
        addressType: '',
        regExp: '',
        iconField: '',
        errorMsg: '',
        effectOnMap: '',
        default: '',
        uiType: '',
        isSearchable: true,
        searchableKey: '',
        displayPath: '',
        DtoName: '',
      },
      uiSchema: {
        'ui:widget': 'address',
        editSchema: {
          type: 'object',
          fieldType: 'extra',
          properties: {
            title: { type: 'string', title: 'Label' },
            description: { type: 'string', title: 'Tab Name' },
            iconField: { type: 'iconField', title: 'Icon' },
            multi: { type: 'string', title: 'Multi (true, false)' },
            specialKey: { type: 'string', title: 'Special Key' },
            hasEffectOn: { type: 'string', title: 'Effect on Field Name' },
            hasEffectedFrom: { type: 'string', title: 'Effect From Field Name' },
            isSearchable: { type: 'boolean', title: 'Is Searchable ' },
            searchableKey: { type: 'string', title: 'Searchable Key ' },
            displayPath: { type: 'string', title: 'display Path' },
            lookup: { type: 'lookup', title: 'Lookup' },
            addressType: {
              type: 'lookupItem',
              lookupTypeName: 'ContactAddressType',
              lookupParentId: '',
              title: 'Address Type',
            },
            regExp: { type: 'string', title: 'Regular Expression' },
            errorMsg: { type: 'string', title: 'Error Message' },
            effectOnMap: { type: 'string', title: 'Effect On Map Id' },
            default: { type: 'string', title: 'Default Value' },
            uiType: { type: 'string', title: ' UI Type' },
            required: { type: 'boolean' },
            DtoName: { type: 'string', title: 'Dto Name' },
          },
        },
      },
      formData: {},
    },
  ],
};

export default config;
